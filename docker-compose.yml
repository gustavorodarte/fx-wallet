version: "3"

volumes:
  db-data:
    driver: local

services:
  base: &base
    hostname: base
    image: node:functional-boilerplate
    ports: []
    stdin_open: true
    tty: true
    build:
      context: .
      dockerfile: dev.Dockerfile
    volumes:
      - .:/home/node/app

  db:
    hostname: db
    image: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 'zrp@1234'
  
  pgadmin4:
    hostname: pgadmin4
    image: dpage/pgadmin4
    ports:
      - 6003:80
    environment:
      PGADMIN_DEFAULT_EMAIL: 'dev@zrp.com.br'
      PGADMIN_DEFAULT_PASSWORD: 'zrp@1234'
    depends_on:
      - db

  app: &app
    <<: *base
    hostname: app
    command: npm run start
    environment: &env
      NODE_ENV: development
      NODE_PATH: "."
      APOLLO_ROUTE: "graphql"
      APOLLO_INSTROSPECTION: "true"
      APOLLO_PLAYGROUND: "true"
      CORS_EXPOSE_HEADERS: "x-ws-token"
      CORS_HEADERS: "Origin, X-Requested-With, Content-Type, Accept, Authorization"
      CORS_METHODS: "GET, POST, PUT, OPTIONS, PATCH, DELETE"
      CORS_ORIGIN: "*"
      EXPRESS_PORT: 80
      DB_HOST: 'db'
      DB_DATABASE: fx-wallet
      DB_USER: 'postgres'
      DB_PASSWORD: 'zrp@1234'
      AUTH_SECRET: 'zrp@1234'
      SIMPLE_BASE_URL: 'https://api.demo.frentecorretora.com.br/v1/:443'
      SIMPLE_LOGIN_EMAIL: 'zrp@zrp.com'
      SIMPLE_LOGIN_PASSWORD: 'zrp@1234'
    ports:
      - "3007:80"
    depends_on:
      - db

  debug:
    <<: *app
    command: npm run start:debug
    ports:
      - "3000:80"
      - "9229:9229"

  specs:
    <<: *base
    command: /bin/ash -c "npm test"
    environment:
      <<: *env
      NODE_ENV: test
      NODE_PATH: "."
    depends_on:
      - db

  lint:
    <<: *base
    command: /bin/ash -c "npm run lint"
    environment:
      NODE_PATH: "."
